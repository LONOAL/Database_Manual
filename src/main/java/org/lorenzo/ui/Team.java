/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package org.lorenzo.ui;
import org.lorenzo.conection.Conection;
import org.lorenzo.query.Sql;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.*;

/**
 *
 * @author PC-LORENZO
 */
public class Team extends javax.swing.JInternalFrame {

    String url="";
    static ResultSet res;
    String leagueId = "0";
    Sql sql = new Sql(new Conection());
    String titulos[];


    /**
     * Creates new form DatabaseUi
     */
    public Team() {
        initComponents();
        emptyTable();
        seeData();
        desabilitar();
        guardar.setEnabled(false);
        modify.setEnabled(false);
        delete.setEnabled(false);
        loadCBoxes();
    }

     public void desabilitar(){
        leagueComboBox.setEnabled(false);
        srtNameField.setEnabled(false);

    }
    
    public void limpiar(){
        srtNameField.setText("");

    }
    
    public void habilitar(){
        leagueComboBox.setEnabled(true);
        srtNameField.setEnabled(true);

    }
    
    public void emptyTable(){
        DefaultTableModel Modelo = (DefaultTableModel) jTable1.getModel();
        titulos = new String[]{"id", "club_team_id", "club_name","league_id"};
        Modelo = new DefaultTableModel(null,titulos);
        jTable1.setModel(Modelo);
    }

    public void seeData(){
        try {
            Connection con1 = null;
            DefaultTableModel miModelo = (DefaultTableModel) jTable1.getModel();
            Conection conect1 = new Conection();
            con1 = conect1.getConnection();
            String dts[] = new String[titulos.length];
            String sql = "select * from team";
            java.sql.Statement st = con1.createStatement();
            st.execute(sql);
            ResultSet rs = st.getResultSet();
            while(rs.next()){
                for (int i = 1; i <= dts.length; i++){
                    dts[i-1] = rs.getString(i);
                }
                miModelo.addRow(dts);
            }
            jTable1.setModel(miModelo);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "NO SE PUEDEN VISUALIZAR LOS DATOS DE LA TABLA", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        leagueLabel2 = new javax.swing.JLabel();
        leagueLabel1 = new javax.swing.JLabel();
        leagueComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        srtNameField = new javax.swing.JTextField();
        leagueLabel = new javax.swing.JLabel();
        srtNameLabel = new javax.swing.JLabel();
        nuevo = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        modify = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        idNumberLabel = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        leagueLabel2.setFont(new java.awt.Font("EA Font v1.5 by Ghettoshark", 0, 36)); // NOI18N
        leagueLabel2.setText("draw new badge");
        jPanel1.add(leagueLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1150, 20, 290, 30));

        leagueLabel1.setFont(new java.awt.Font("EA Font v1.5 by Ghettoshark", 0, 36)); // NOI18N
        leagueLabel1.setText("badge");
        jPanel1.add(leagueLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 10, 170, 30));

        leagueComboBox.setFont(new java.awt.Font("EA Font v1.5 by Ghettoshark", 0, 14)); // NOI18N
        leagueComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        leagueComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leagueComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(leagueComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, 280, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 1900, 520));

        srtNameField.setFont(new java.awt.Font("EA Font v1.5 by Ghettoshark", 0, 14)); // NOI18N
        srtNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                srtNameFieldActionPerformed(evt);
            }
        });
        jPanel1.add(srtNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, 280, 30));

        leagueLabel.setFont(new java.awt.Font("EA Font v1.5 by Ghettoshark", 0, 18)); // NOI18N
        leagueLabel.setText("league");
        jPanel1.add(leagueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 170, 30));

        srtNameLabel.setFont(new java.awt.Font("EA Font v1.5 by Ghettoshark", 0, 18)); // NOI18N
        srtNameLabel.setText("TEAM NAME");
        jPanel1.add(srtNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 170, 30));

        nuevo.setFont(new java.awt.Font("EA Font v1.5 by Ghettoshark", 0, 14)); // NOI18N
        nuevo.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC-LORENZO\\Documents\\NetBeansProjects\\Boletines\\DatabaseMan\\src\\iconos\\auxiliar\\nuevo.png")); // NOI18N
        nuevo.setText("New");
        nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoActionPerformed(evt);
            }
        });
        jPanel1.add(nuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 90, 170, -1));

        guardar.setFont(new java.awt.Font("EA Font v1.5 by Ghettoshark", 0, 14)); // NOI18N
        guardar.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC-LORENZO\\Documents\\NetBeansProjects\\Boletines\\DatabaseMan\\src\\iconos\\auxiliar\\interface.png")); // NOI18N
        guardar.setText("SAVE");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        jPanel1.add(guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 130, 170, -1));

        modify.setFont(new java.awt.Font("EA Font v1.5 by Ghettoshark", 0, 14)); // NOI18N
        modify.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC-LORENZO\\Documents\\NetBeansProjects\\Boletines\\DatabaseMan\\src\\iconos\\auxiliar\\edit-document.png")); // NOI18N
        modify.setText("MODIFY");
        modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyActionPerformed(evt);
            }
        });
        jPanel1.add(modify, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 170, 170, -1));

        delete.setFont(new java.awt.Font("EA Font v1.5 by Ghettoshark", 0, 14)); // NOI18N
        delete.setIcon(new javax.swing.ImageIcon("C:\\Users\\PC-LORENZO\\Documents\\NetBeansProjects\\Boletines\\DatabaseMan\\src\\iconos\\auxiliar\\dvavd.png")); // NOI18N
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel1.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 210, 170, -1));

        idNumberLabel.setFont(new java.awt.Font("EA Font v1.5 by Ghettoshark", 0, 18)); // NOI18N
        idNumberLabel.setText("0000");
        jPanel1.add(idNumberLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 80, 30));

        idLabel.setFont(new java.awt.Font("EA Font v1.5 by Ghettoshark", 0, 18)); // NOI18N
        idLabel.setText("id ");
        jPanel1.add(idLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 30, 30));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 50, 190, 190));

        jButton1.setFont(new java.awt.Font("EA Font v1.5 by Ghettoshark", 0, 14)); // NOI18N
        jButton1.setText("reload");
        jButton1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                JFileChooser fileChooser = new JFileChooser();
                int result = fileChooser.showSaveDialog(jPanel1);
                if (result == JFileChooser.APPROVE_OPTION) {
                    url = fileChooser.getSelectedFile().getPath();
                    jLabel1.setIcon(new ImageIcon(url));
                }
                }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 250, 150, 20));

        jButton2.setFont(new java.awt.Font("EA Font v1.5 by Ghettoshark", 0, 36)); // NOI18N
        jButton2.setText("draw");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 80, 310, 150));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    public void loadCBoxes(){
        try {
            Connection con1 = null;
            Conection conect1 = new Conection();
            con1 = conect1.getConnection();
            String sql = "select * from league";
            java.sql.Statement st = con1.createStatement();
            st.execute(sql);
            ResultSet rs = st.getResultSet();
            leagueComboBox.removeAllItems();
            while(rs.next()) {
                leagueComboBox.addItem(rs.getString("league_name"));
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "ERROR AL CARGAR LOS CBOX", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoActionPerformed
        // TODO add your handling code here:
        limpiar();
        habilitar();
        nuevo.setEnabled(false);
        guardar.setEnabled(true);
        emptyTable();
        seeData();
    }//GEN-LAST:event_nuevoActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        // TODO add your handling code here:
            try
            {
                Connection con = null;
                Conection conect = new Conection();
                con = conect.getConnection();
                Statement st = con.createStatement();
                st.execute("select max(club_team_id) from team");
                String id="0";
                ResultSet rs = st.getResultSet();
                while (rs.next()){
                    id= rs.getString(1);
                }
                String sql = "insert into team (club_team_id,club_name,league_id) values (?,?,?)";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setString(1, String.valueOf(Integer.parseInt(id)+1));
                pst.setString(2, srtNameField.getText());
                pst.setString(3, String.valueOf(this.sql.getLeagueId((String) leagueComboBox.getSelectedItem())));
                int n = pst.executeUpdate();
                if (n > 0)
                {
                    JOptionPane.showMessageDialog(this, "DATOS GUARDADOS CORRECTAMENTE");
                    limpiar();
                    emptyTable();
                    seeData();
                    nuevo.setEnabled(true);
                    guardar.setEnabled(false);
                    modify.setEnabled(false);
                    delete.setEnabled(false);
                    desabilitar();
                }
            } catch (SQLException | HeadlessException e) {
                System.out.println(e.getMessage());
            }
        }
//GEN-LAST:event_guardarActionPerformed

    private void modifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyActionPerformed
        // TODO add your handling code here:
        try
        {
            Connection con = null;
            Conection conect = new Conection();
            con = conect.getConnection();
            Statement st = con.createStatement();
            String sql = "update team set club_team_id=?, club_name=?, league_id=? where id=?";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, idNumberLabel.getText());
            pst.setString(2, srtNameField.getText());
            pst.setString(3,String.valueOf(this.sql.getLeagueId((String) leagueComboBox.getSelectedItem())));
            pst.setString(4, leagueId);
            int n = pst.executeUpdate();
            if (n > 0)
            {
                JOptionPane.showMessageDialog(this, "DATOS GUARDADOS CORRECTAMENTE");
                limpiar();
                emptyTable();
                seeData();
                nuevo.setEnabled(true);
                guardar.setEnabled(false);
                modify.setEnabled(false);
                delete.setEnabled(false);
                desabilitar();
            }
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(this, "LOS DATOS NO HAN SIDO GUARDADOS CORRECTAMENTE", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_modifyActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        int fila = jTable1.getSelectedRow();
        if (fila == -1)
        {
            JOptionPane.showMessageDialog(null, "DEBE SELECCIONAR UN REGISTRO", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            int opc = JOptionPane.showConfirmDialog(this, "¿ESTA SEGURO QUE DESEA ELIMINAR ESTE REGISTRO?", "Pregunta", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (opc == JOptionPane.YES_OPTION)
            {
                try
                {
                    Connection con = null;
                    Conection conect = new Conection();
                    con = conect.getConnection();
                    Statement st = con.createStatement();
                    String sql = "delete from team where club_team_id = ?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.setInt(1, Integer.parseInt(idNumberLabel.getText()));
                    int n = pst.executeUpdate();
                    if (n > 0)
                    {
                        JOptionPane.showMessageDialog(this, "DATOS ELIMINADOS CORRECTAMENTE");
                        limpiar();
                        emptyTable();
                        seeData();
                        nuevo.setEnabled(true);
                        guardar.setEnabled(false);
                        modify.setEnabled(false);
                        delete.setEnabled(false);
                        desabilitar();
                    }
                } catch (SQLException ex)
                {
                    JOptionPane.showMessageDialog(this, "DATOS NO ELIMINADOS CORRECTAMENTE" + ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void srtNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srtNameFieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_srtNameFieldActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {
        try
        {
            int fila = jTable1.getSelectedRow();
            leagueId = jTable1.getValueAt(fila, 0).toString();
            idNumberLabel.setText((String) jTable1.getValueAt(fila, 1));
            srtNameField.setText((String) jTable1.getValueAt(fila, 2));
            leagueComboBox.setSelectedItem(this.sql.getLeagueName(Integer.parseInt(jTable1.getValueAt(fila,3).toString())));
            nuevo.setEnabled(false);
            guardar.setEnabled(false);
            modify.setEnabled(true);
            delete.setEnabled(true);
            habilitar();
        } catch (Exception ex)
        {
            System.out.println("ERROR AL SELECCIONAR UN EQUIPO : " + ex.getMessage());
        }
    }

    private void leagueComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leagueComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_leagueComboBoxActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DrawingPanel.init();
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete;
    private javax.swing.JButton guardar;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel idNumberLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> leagueComboBox;
    private javax.swing.JLabel leagueLabel;
    private javax.swing.JLabel leagueLabel1;
    private javax.swing.JLabel leagueLabel2;
    private javax.swing.JButton modify;
    private javax.swing.JButton nuevo;
    private javax.swing.JTextField srtNameField;
    private javax.swing.JLabel srtNameLabel;
    // End of variables declaration//GEN-END:variables
}
